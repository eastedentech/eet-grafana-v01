#version: "3.8"
volumes:
  grafana:

services:

  # Grafana for exploring and visualizing data
  grafana-server:
    image: grafana/grafana:latest
    restart: unless-stopped
    volumes:
      - "./grafana/grafana.ini:/etc/grafana/grafana.ini"
      - "./grafana/provisioning:/etc/grafana/provisioning"
      - "./grafana/data:/var/lib/grafana"
    ports:
      - "3000:3000"

   # Grafana Metrics
  mimir:
    image: grafana/mimir:latest
    depends_on:
      - grafana-server
    restart: unless-stopped
    volumes:
      - "./mimir/config-single.yaml:/etc/mimir/config.yaml"
      - "./mimir/data:/tmp/mimir"
    ports:
      - "9009:9009"
    command: [
      "-config.file=/etc/mimir/config.yaml"
    ]

  # Grafana Agent
  grafana-agent:
    image: grafana/agent:latest
    depends_on:
      - mimir
    restart: unless-stopped
    ports:
      - "12345:12345"
      - "3500:3500"
      - "16603:16603"
    volumes:
      - "./grafana-agent/config.yaml:/etc/agent/agent.yaml"
    command: [
      "-config.file=/etc/agent/agent.yaml",
      "-server.http.address=0.0.0.0:12345",
    ]

  loki:
    image: grafana/loki:latest
    depends_on:
      - grafana-server
    healthcheck:
      test: wget --quiet --tries=1 --output-document=- http://localhost:3100/ready | grep -q -w ready || exit 1
      start_period: 5s
      interval: 5s
      timeout: 1s
      retries: 12  # try for 2 minutes
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - "./loki/config.yaml:/etc/loki/local-config.yaml"
      - "./loki:/loki"

  vector:
    image: timberio/vector:latest-alpine
    depends_on:
      loki:
        condition: service_healthy
    restart: unless-stopped
    command: --config /etc/vector/vector.toml
    ports:
      - "5114:5114/tcp"
      - "5114:5114/udp"
      - "5115:5115/udp"
      - "5116:5116/udp"
      - "5117:5117/udp"
    volumes:
      - "./vector:/etc/vector"